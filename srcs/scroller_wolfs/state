blit_pictures.c:	  tekpixel(s->pix, &pos, color, s->state);
blit_pictures.c:      if (pos.y < (WINH / 1.40) && s->state == 0)
blit_pictures.c:  s->start_one += 1;
blit_pictures.c:  if (s->start_one == s->pix_one->clipable.clip_width)
blit_pictures.c:    s->start_one = 0;
blit_pictures.c:  s->start_two += 2;
blit_pictures.c:  if (s->start_two == s->pix_two->clipable.clip_width)
blit_pictures.c:    s->start_two = 0;
blit_pictures.c:  s->start_three += 3;
blit_pictures.c:  if (s->start_three == s->pix_three->clipable.clip_width)
blit_pictures.c:    s->start_three = 0;
blit_pictures.c:  pix_initialize(s->pix);
blit_pictures.c:  s->state = 0;
blit_pictures.c:  put_pix_in_pix(s, s->pix_one, pos, s->start_one);
blit_pictures.c:  pos.y = WINH - s->pix_three->clipable.clip_height;
blit_pictures.c:  s->state = 1;
blit_pictures.c:  put_pix_in_pix(s, s->pix_three, pos, s->start_three);
blit_pictures.c:  pos.y = WINH - s->pix_two->clipable.clip_height - (WINH / 4);
blit_pictures.c:  s->state = 2;
blit_pictures.c:  put_pix_in_pix(s, s->pix_two, pos, s->start_two);
events.c:      s->sprite_wolf = 0;
events.c:      s->state_wolf = 0;
events.c:      s->sprite_wolf = 0;
events.c:      s->state_wolf = 2;
events.c:      s->sprite_wolf = 0;
events.c:      s->state_wolf = 1;
events.c:    s->state = 1;
events.c:  printf("%d\n", s->state);
events.c:  if (s->state == 1)
events.c:  bunny_blit(&s->win->buffer, &s->pix->clipable, NULL);
events.c:  bunny_display(s->win);
events.c:  bunny_delete_clipable(&s->pix_one->clipable);
events.c:  bunny_delete_clipable(&s->pix_two->clipable);
events.c:  bunny_delete_clipable(&s->pix_three->clipable);
events.c:  s->win = w->win;
events.c:  s->pix = w->pix;
events.c:  if ((s->pix_one = bunny_load_pixelarray("map/montagnes.png")) == NULL)
events.c:  s->start_one = 0;
events.c:  if ((s->pix_two = bunny_load_pixelarray("map/forÃªt.png")) == NULL)
events.c:  s->start_two = 0;
events.c:  if ((s->pix_three = bunny_load_pixelarray("map/herbe.png")) == NULL)
events.c:  s->start_three = 0;
events.c:  if ((s->wolf = bunny_load_pixelarray("map/wolf.png")) == NULL)
events.c:  s->state_wolf = 1;
events.c:  s->sprite_wolf = 0;
events.c:  s->start_wolf = -200;
events.c:  s->state = 0;
moove_wolfs.c:	  i = posi.x + (posi.y * s->wolf->clipable.clip_width);
moove_wolfs.c:	  color = (t_color*)s->wolf->pixels + i;
moove_wolfs.c:	  tekpixel(s->pix, &pos, color, 0);
moove_wolfs.c:      posi.x = s->sprite_wolf * 200;
moove_wolfs.c:  pos.x = s->start_wolf;
moove_wolfs.c:  posi.x = s->sprite_wolf * 200;
moove_wolfs.c:  posi.y = s->state_wolf * 200;
moove_wolfs.c:    s->sprite_wolf += 1;
moove_wolfs.c:  if (s->state_wolf == 1)
moove_wolfs.c:    s->start_wolf += 3;
moove_wolfs.c:  else if (s->state_wolf == 0)
moove_wolfs.c:    s->start_wolf -= 3;
moove_wolfs.c:  if ((s->sprite_wolf == 4 && s->state_wolf != 2) ||
moove_wolfs.c:      (s->sprite_wolf == 3 && s->state_wolf == 2))
moove_wolfs.c:    s->sprite_wolf = 0;
tekpixel.c:  if (pos->x >= 0 && pos->x < pix->clipable.clip_width &&
tekpixel.c:      pos->y >= 0 && pos->y < pix->clipable.clip_height)
tekpixel.c:      i = pos->x + (pix->clipable.clip_width * pos->y);
